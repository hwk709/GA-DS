import pandas as pd
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.model_selection import train_test_split

# Assuming you have your dataset structured
# Sample structure for your dataset (replace with actual data)
data = pd.DataFrame({
    'year': [2020, 2021, 2022, 2023, 2020, 2021, 2022, 2023],
    'program_code': ['A', 'A', 'B', 'B', 'C', 'C', 'D', 'D'],
    'funding_level': [1000, 1100, 1200, 1300, 900, 950, 1050, 1100],
    'requirement': [2000, 2200, 2400, 2600, 1800, 1900, 2100, 2300],
    'L1_total_requirement': [10000, 11000, 12000, 13000, 9000, 9500, 10500, 11000],
    'L2_total_requirement': [5000, 5500, 6000, 6500, 4500, 4750, 5250, 5500],
    'L5_total_requirement': [2000, 2200, 2400, 2600, 1800, 1900, 2100, 2300]
})

# Label Encoding for 'program_code'
label_encoder = LabelEncoder()
data['program_code_encoded'] = label_encoder.fit_transform(data['program_code'])

# One-Hot Encoding for 'program_code'
one_hot_encoder = OneHotEncoder(sparse=False)
encoded_columns = one_hot_encoder.fit_transform(data[['program_code']])
encoded_df = pd.DataFrame(encoded_columns, columns=[f'program_code_{int(i)}' for i in range(encoded_columns.shape[1])])

# Combine original data with one-hot encoded columns
data = pd.concat([data, encoded_df], axis=1)

# Drop the original 'program_code' as we've encoded it
data = data.drop(columns=['program_code'])

# Now you have both label and one-hot encoded variables for 'program_code'
print(data.head())
